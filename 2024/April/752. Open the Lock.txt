from collections import deque

class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        deadends = set(deadends)
        if '0000' in deadends:
            return -1
        
        queue = deque([('0000', 0)])
        visited = set('0000')
        
        while queue:
            current, turns = queue.popleft()
            if current == target:
                return turns
            
            for i in range(4):
                for j in [-1, 1]:
                    new_digit = str((int(current[i]) + j) % 10)
                    new_state = current[:i] + new_digit + current[i+1:]
                    if new_state not in deadends and new_state not in visited:
                        queue.append((new_state, turns + 1))
                        visited.add(new_state)
        
        return -1  # Target state is unreachable
