Function findAllPeople(n, meetings, firstPerson):
    graph = defaultdict(list)
    earliest = Array of size n initialized with infinity values
    earliest[0] = 0
    earliest[firstPerson] = 0

    # Populate the graph with meeting information
    for each meeting in meetings:
        x, y, t = meeting
        graph[x].append((t, y))
        graph[y].append((t, x))

    # Depth-First Search to update earliest time each person learned the secret
    Function DFS(person, time):
        for each meeting_time, next_person in graph[person]:
            if meeting_time >= time and earliest[next_person] > meeting_time:
                earliest[next_person] = meeting_time
                Call DFS recursively for next_person with meeting_time
        
    Call DFS(0, 0) # Start DFS from person 0
    Call DFS(firstPerson, 0) # Start DFS from the firstPerson

    secret_holders = Empty List
    for i from 0 to n-1:
        if earliest[i] is not infinity:
            Append i to secret_holders

    Return secret_holders
