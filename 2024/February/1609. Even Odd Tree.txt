function isEvenOddTree(root):
    if root is null:
        return True
    
    queue = Queue()
    queue.enqueue(root)
    level = 0
    
    while queue is not empty:
        size = queue.size()
        prev_val = null if level is even else infinity
        
        for i from 1 to size:
            node = queue.dequeue()
            
            # Check if current node's value meets the criteria
            if level is even:
                if node.value is even or (prev_val is not null and prev_val >= node.value):
                    return False
            else:
                if node.value is odd or (prev_val is not null and prev_val <= node.value):
                    return False
                
            prev_val = node.value
            
            # Add children to the queue
            if node.left is not null:
                queue.enqueue(node.left)
            if node.right is not null:
                queue.enqueue(node.right)
        
        level += 1
    
    return True
