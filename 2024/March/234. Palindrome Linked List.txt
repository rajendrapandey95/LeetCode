function isPalindrome(head):
    if head is None or head.next is None:
        return true
    
    # Step 1: Find the middle of the linked list
    slow = fast = head
    while fast.next is not None and fast.next.next is not None:
        slow = slow.next
        fast = fast.next.next
    
    # Step 2: Reverse the second half of the linked list
    middle = slow
    second_half = middle.next
    middle.next = None
    
    prev = None
    curr = second_half
    while curr is not None:
        next_node = curr.next
        curr.next = prev
        prev = curr
        curr = next_node
    second_half = prev
    
    # Step 3: Compare the first half with the reversed second half
    first_half = head
    while second_half is not None:
        if first_half.val != second_half.val:
            return false
        first_half = first_half.next
        second_half = second_half.next
    
    return true
