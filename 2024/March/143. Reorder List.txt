function reorderList(head):
    if head is None or head.next is None:
        return
    
    # Step 1: Find the middle of the linked list
    slow = fast = head
    while fast.next is not None and fast.next.next is not None:
        slow = slow.next
        fast = fast.next.next
    
    # Split the list into two halves
    middle = slow
    second_half = middle.next
    middle.next = None
    
    # Step 2: Reverse the second half of the linked list
    prev = None
    curr = second_half
    while curr is not None:
        next_node = curr.next
        curr.next = prev
        prev = curr
        curr = next_node
    second_half = prev
    
    # Step 3: Merge the first half with the reversed second half
    first_half = head
    while second_half is not None:
        next_first = first_half.next
        next_second = second_half.next
        first_half.next = second_half
        second_half.next = next_first
        first_half = next_first
        second_half = next_second
